package com.cognizant.queryinterface;


public class AgileQueries {



	public static final String ADD_RECORD="INSERT INTO AGILE(AGILE_POD_ID, AGILE_POD_NAME, MONTH, YEAR,"
			+ "AGILE_ITERATION,"
			+ "AGILE_COGNIZANT_TEAM_SIZE,AGILE_TELSTRA_TEAM_SIZE,NUMBER_OF_COGNIZANT_HOLIDAYS,NUMBER_OF_COGNIZANT_LEAVES,"
			+ "NUMBER_OF_TELSTRA_HOLIDAYS,NUMBER_OF_TELSTRA_LEAVES,AGILE_ITERATION_NUMBER,AGILE_USERSTORIES_COMMITTED, AGILE_USERSTORIES_ACCEPTED,"
			+ "AGILE_COMMITTED_STORY_POINTS, AGILE_ACCEPTED_STORY_POINTS, AGILE_ACCEPTED_STORYPOINTS_PERWEEK, UNIT_TEST_COVERAGE,"
			+ "AGILE_AVERAGE_CYCLE, AGILE_VELOCITY_RATE, COMMITMENT_RELIABILITY,"
			+ "AGILE_COMMENTS, CREATE_USERNAME, CREATE_DATE)"
			+ "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate())";
	
	public static final String LOAD_SEARCH_AGILE = "SELECT AGILE_ID, AGILE_POD_ID, AGILE_POD_NAME, MONTH, YEAR,"
			+ "AGILE_ITERATION,"
			+ "AGILE_COGNIZANT_TEAM_SIZE,AGILE_TELSTRA_TEAM_SIZE,NUMBER_OF_COGNIZANT_HOLIDAYS,NUMBER_OF_COGNIZANT_LEAVES,"
			+ "NUMBER_OF_TELSTRA_HOLIDAYS,NUMBER_OF_TELSTRA_LEAVES,AGILE_ITERATION_NUMBER,AGILE_USERSTORIES_COMMITTED, AGILE_USERSTORIES_ACCEPTED,"
			+ "AGILE_COMMITTED_STORY_POINTS,AGILE_ACCEPTED_STORY_POINTS,AGILE_ACCEPTED_STORYPOINTS_PERWEEK,UNIT_TEST_COVERAGE,"
			+ "AGILE_AVERAGE_CYCLE,AGILE_VELOCITY_RATE,COMMITMENT_RELIABILITY,AGILE_VELOCITY_PER_WEEK,"
			+ "AGILE_COMMENTS FROM AGILE WHERE YEAR = ? AND MONTH = ? AND AGILE_POD_NAME=?";

	public static final String LOAD_RECORD_AGILE = "SELECT AGILE_ID, AGILE_POD_ID, AGILE_POD_NAME, MONTH, YEAR,"
			+ "AVG(AGILE_ITERATION),"
			+ "AVG(AGILE_COGNIZANT_TEAM_SIZE),AVG(AGILE_TELSTRA_TEAM_SIZE),AVG(NUMBER_OF_COGNIZANT_HOLIDAYS),AVG(NUMBER_OF_COGNIZANT_LEAVES),"
			+ "AVG(NUMBER_OF_TELSTRA_HOLIDAYS),AVG(NUMBER_OF_TELSTRA_LEAVES),AVG(AGILE_ITERATION_NUMBER),AVG(AGILE_USERSTORIES_COMMITTED), AVG(AGILE_USERSTORIES_ACCEPTED),"
			+ "AVG(AGILE_COMMITTED_STORY_POINTS),AVG(AGILE_ACCEPTED_STORY_POINTS),AVG(AGILE_ACCEPTED_STORYPOINTS_PERWEEK),AVG(UNIT_TEST_COVERAGE),"
			+ "AVG(AGILE_AVERAGE_CYCLE),AVG(AGILE_VELOCITY_RATE),AVG(COMMITMENT_RELIABILITY),AVG(AGILE_VELOCITY_PER_WEEK),"
			+ "AGILE_COMMENTS FROM AGILE WHERE YEAR = ? AND MONTH = ? GROUP BY MONTH,YEAR ";

	public static final String LOAD_AGILE = "SELECT AGILE_POD_ID, AGILE_POD_NAME, MONTH, YEAR,"
			+ "AGILE_ITERATION,"
			+ "AGILE_COGNIZANT_TEAM_SIZE,AGILE_TELSTRA_TEAM_SIZE,NUMBER_OF_COGNIZANT_HOLIDAYS,NUMBER_OF_COGNIZANT_LEAVES,"
			+ "NUMBER_OF_TELSTRA_HOLIDAYS,NUMBER_OF_TELSTRA_LEAVES,AGILE_ITERATION_NUMBER,AGILE_USERSTORIES_COMMITTED, AGILE_USERSTORIES_ACCEPTED,"
			+ "AGILE_COMMITTED_STORY_POINTS, AGILE_ACCEPTED_STORY_POINTS, AGILE_ACCEPTED_STORYPOINTS_PERWEEK, UNIT_TEST_COVERAGE,"
			+ "AGILE_AVERAGE_CYCLE, AGILE_VELOCITY_RATE, COMMITMENT_RELIABILITY,"
			+ "AGILE_COMMENTS FROM AGILE";
	
	
	public static final String COGNIZANT_TEAM_SIZE_SUM="select AGILE_COGNIZANT_TEAM_SIZE from agile where YEAR = ? and MONTH = ? and AGILE_POD_NAME in (select distinct AGILE_POD_NAME from agile) group by AGILE_POD_NAME";
	
	public static final String TELSTRA_TEAM_SIZE_SUM="select AGILE_TELSTRA_TEAM_SIZE from agile where YEAR = ? and MONTH = ? and AGILE_POD_NAME in (select distinct AGILE_POD_NAME from agile) group by AGILE_POD_NAME";
	
	public static final String AVG_VELOCITY_PER_WEEK="SELECT AVG(AGILE_VELOCITY_PER_WEEK) FROM AGILE WHERE YEAR = ? AND MONTH = ? GROUP BY MONTH";

	public static final String AVG_VELOCITY_RATE="SELECT AVG(AGILE_VELOCITY_RATE) FROM AGILE WHERE YEAR = ? AND MONTH = ? GROUP BY MONTH";
	
	public static final String AVG_CYCLE_TIME="SELECT AVG(AGILE_AVERAGE_CYCLE) FROM AGILE WHERE YEAR = ? AND MONTH = ? GROUP BY MONTH";
	
	public static final String ACCEPTED_STORYPOINTS_PERWEEK="SELECT AVG(AGILE_ACCEPTED_STORYPOINTS_PERWEEK) FROM AGILE WHERE YEAR = ? AND MONTH = ? GROUP BY MONTH";
	
	public static final String YEAR="select distinct YEAR from agile order by YEAR desc";

	public static final String MONTH="select distinct MONTH from agile where YEAR = ? order by MONTH desc";
	
	public static final String COMMITMENT_RELIABILITY="SELECT AVG(COMMITMENT_RELIABILITY) FROM AGILE WHERE YEAR = ? AND MONTH = ? GROUP BY MONTH";
	
	public static final String UNIT_TEST_COVERAGE="SELECT AVG(UNIT_TEST_COVERAGE) FROM AGILE WHERE YEAR = ? AND MONTH = ? GROUP BY MONTH";
	
	public static final String UPDATE_RECORD = "UPDATE AGILE SET AGILE_POD_NAME=?,MONTH=?,YEAR=?,"
			+ "AGILE_ITERATION=?,"
			+ "AGILE_COGNIZANT_TEAM_SIZE=?,AGILE_TELSTRA_TEAM_SIZE=?,NUMBER_OF_COGNIZANT_HOLIDAYS=?,NUMBER_OF_COGNIZANT_LEAVES=?,"
			+ "NUMBER_OF_TELSTRA_HOLIDAYS=?,NUMBER_OF_TELSTRA_LEAVES=?,AGILE_ITERATION_NUMBER=?,AGILE_USERSTORIES_COMMITTED=?,AGILE_USERSTORIES_ACCEPTED=?,"
			+ "AGILE_COMMITTED_STORY_POINTS=?,AGILE_ACCEPTED_STORY_POINTS=?,AGILE_ACCEPTED_STORYPOINTS_PERWEEK=?,UNIT_TEST_COVERAGE=?,"
			+ "AGILE_AVERAGE_CYCLE=?,AGILE_VELOCITY_RATE=?,COMMITMENT_RELIABILITY=?,AGILE_VELOCITY_PER_WEEK=?,"
			+ "AGILE_COMMENTS=? WHERE AGILE_ID =?";

	public static final String DELETE_RECORD = "DELETE FROM AGILE WHERE AGILE_ID = ?";
		
	public static final String ANALYTICS_AGILE="SELECT AVG(AGILE_VELOCITY_RATE),"
			+ "AVG(COMMITMENT_RELIABILITY),AVG(AGILE_USERSTORIES_COMMITTED),AVG(AGILE_USERSTORIES_ACCEPTED),AVG(AGILE_AVERAGE_CYCLE),"
			+ "AVG(AGILE_COMMITTED_STORY_POINTS),AVG(AGILE_ACCEPTED_STORY_POINTS),"
			+ "AGILE_COGNIZANT_TEAM_SIZE,AGILE_TELSTRA_TEAM_SIZE,"
			+ "AGILE_ITERATION,AGILE_ITERATION_NUMBER,NUMBER_OF_COGNIZANT_HOLIDAYS,"
			+ "NUMBER_OF_TELSTRA_HOLIDAYS,NUMBER_OF_COGNIZANT_LEAVES,NUMBER_OF_TELSTRA_LEAVES,MONTH,YEAR,AGILE_POD_NAME FROM AGILE "
			+ "GROUP BY YEAR,MONTH,AGILE_POD_NAME";
	
	public static final String AGILE_POD_NAME="select distinct agile_pod_name from agile where agile_year = ?";
	
	public static final String CARD_CYCLE_VALUE = "select distinct AGILE_POD_NAME from agile where agile_average_cycle is not null AND agile_average_cycle != '' AND AGILE_POD_NAME != ''";
	
	public static final String CARD_VELOCITY_PER_WEEK = "select distinct AGILE_POD_NAME from agile where agile_accepted_story_points is not null AND agile_accepted_story_points != '' AND AGILE_POD_NAME != ''";
	
	public static final String CARD_CYCLE_VALUE_NO_PROJECT = "select count(distinct AGILE_POD_NAME) from agile where agile_average_cycle is not null AND agile_average_cycle != '' AND AGILE_POD_NAME != ''";
	
	public static final String CARD_VELOCITY_PER_WEEK_NO_PROJECT = "select count(distinct AGILE_POD_NAME) from agile where agile_accepted_story_points is not null AND agile_accepted_story_points != '' AND AGILE_POD_NAME != ''";

}
